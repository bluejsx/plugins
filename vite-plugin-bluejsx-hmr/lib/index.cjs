var Y=Object.create;var S=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var ee=Object.getOwnPropertyNames;var te=Object.getPrototypeOf,re=Object.prototype.hasOwnProperty;var k=c=>S(c,"__esModule",{value:!0});var se=(c,t)=>{k(c);for(var e in t)S(c,e,{get:t[e],enumerable:!0})},ne=(c,t,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of ee(t))!re.call(c,r)&&r!=="default"&&S(c,r,{get:()=>t[r],enumerable:!(e=j(t,r))||e.enumerable});return c},L=c=>ne(k(S(c!=null?Y(te(c)):{},"default",c&&c.__esModule&&"default"in c?{get:()=>c.default,enumerable:!0}:{value:c,enumerable:!0})),c);se(exports,{default:()=>z,hmrAdder:()=>q});var w=typeof document=="undefined"?new(require("url")).URL("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("main.js",document.baseURI).href;var O=L(require("acorn"));var F=class{constructor(){this.UPDATE_LISTENER_FUNC_NAME="_bjsx_hmr_update";this.PARAM_ALTER_NAME="_blue_insert_params"}transform(t){}getImports(...t){return[]}getExports(...t){return[]}getDependentJSXComponents(t,e){return[]}getFunctions(t){return[]}getVars(t,e){return[]}fromDirectReturnToVarReturn(t){return""}getReturnValue(t){return""}getInsertRecord(){return[]}replaceCode(t,e,r,n,s=!1){let a=0;return n.filter(o=>o[0]<e[0]||s&&o[0]===e[0]).forEach(o=>a+=o[1]),n.push([e[0],t.length-e[1]+e[0]]),r.substring(0,e[0]+a)+t+r.substring(e[1]+a)}insertCode(t,e,r,n,s=!1){return this.replaceCode(t,[e,e],r,n,s)}getCodeFragment(t,e,r){let n=t[0],s=t[1];for(let a=r.length;a--;){let[o,m]=r[a];o<t[1]&&(s+=m,o<t[0]&&(n+=m))}return e.substring(n,s)}};var x=L(require("path")),P=L(require("fs")),v=class extends F{constructor(){super();this.Parser=O.Parser}transform(t,e){t=t.replace(/=>/g,"=> ");let r=this.Parser.parse(t,{ecmaVersion:"latest",sourceType:"module"}),n=t,s=this.getImports(r.body,e),a=this.getExportedFunctions(r.body),o=this.getInsertRecord();return a.forEach(m=>{let{start:h,end:E}=m,y=this.getCodeFragment([h,E],t,o),u=this.getDependentJSXComponents(y,s);t=this.replaceCode(this.processFunctionCode(u,m,y,n),[h,E],t,o)}),t}addHotListenerInfo(t,e,r,n){var a,o;(o=t[a=e.info.src])!=null||(t[a]={varMapCode:"",listenCode:""});let s=t[e.info.src];s.varMapCode+=`${e.info.imports[e.name]}:${e.name},`,s.listenCode+=`
if(${r}.${e.refName}.${this.UPDATE_LISTENER_FUNC_NAME}){
  ${r}.${e.refName}=${r}.${e.refName}.${this.UPDATE_LISTENER_FUNC_NAME}(${e.name});
  ${n}
}else{
  import.meta.hot.decline()
}
`}processFunctionCode(t,e,r,n){var V,H,J,X,C,B;let s=this.getInsertRecord(),a=r,o=e.body,m=o.start-e.start,h=o.end-e.start,E=o.body,y=e.params[0],u="";if(y){let i=y.start-e.start,l=y.end-e.start,g=r.substring(i,l);r=this.replaceCode(this.PARAM_ALTER_NAME,[i,l],r,s),u=`
let ${g}=${this.PARAM_ALTER_NAME};`}let p="self",_=[],$={},d,U=0,f=E==null?void 0:E.find(i=>i.type==="ReturnStatement"),I=o.type==="CallExpression"&&((H=(V=o.callee)==null?void 0:V.object)==null?void 0:H.name)==="Blue";if(f)f.argument.type==="Identifier"&&(p=f.argument.name);else if(!I)return a;let Z=f&&f.argument.type==="CallExpression"&&((X=(J=f.argument.callee)==null?void 0:J.object)==null?void 0:X.name)==="Blue",G=I?h:f.start-e.start;for(let i of r.matchAll(/Blue\.r\(/g)){let l=this.Parser.parseExpressionAt(r,i.index,{ecmaVersion:"latest",sourceType:"module"});if(l.type==="SequenceExpression"&&(l=l.expressions.find(g=>g.start===l.start)),(l==null?void 0:l.type)==="CallExpression"&&((C=l==null?void 0:l.arguments[1])==null?void 0:C.type)==="ObjectExpression"){let g=(B=l.arguments[1].properties.find(A=>{var D;return((D=A.key)==null?void 0:D.name)==="ref"}))==null?void 0:B.value.elements[0].name;if(g){d=g;break}}}t.forEach(i=>{let l=i.node.arguments[1];if(l.type==="ObjectExpression"){let g=l.properties.find(A=>A.key.name==="ref");if(g){let A="",D=g.value.elements;if(i.refName=D[1].value,i.hasRef=!0,!I){E.forEach(({type:b,start:R,end:K})=>{let T=R-e.start,Q=K-e.start,W=a.substring(T,Q);b==="ExpressionStatement"&&a.indexOf(i.refName,T)===T&&(A+=`${d}.${W};`)});for(let b of a.matchAll(new RegExp(i.refName,"g")))try{let R=this.Parser.parseExpressionAt(a,b.index,{ecmaVersion:"latest",sourceType:"module"});(R.type==="AssignmentExpression"||R.type==="CallExpression")&&(r=this.insertCode(`${d}.`,b.index,r,s))}catch{}}this.addHotListenerInfo($,i,d,A)}else i.refName=`bjsxc_${U++}`,i.hasRef=!1,_.push(()=>{r=this.insertCode(`ref:[${d},'${i.refName}'],`,l.start+1,r,s),this.addHotListenerInfo($,i,d,"")})}else i.refName=`bjsxc_${U++}`,_.push(()=>{r=this.replaceCode(`{ref:[${d},'${i.refName}']}`,[l.start,l.start+4],r,s),this.addHotListenerInfo($,i,d,"")})}),d||(d="refs",u+=`const ${d}={};`);for(let i=_.length;i--;)_[i]();if(I)u=`{${u}const ${p}=`,r=this.insertCode(`
return ${p};}`,o.end,r,s,!0);else if(Z){let i=this.getCodeFragment([f.start-e.start+6,f.end-e.start],r,s);u=`${u}
      const ${p}=${i};`,r=this.replaceCode(`
return ${p};`,[f.start-e.start,f.start-e.start+i.length+7],r,s)}r=this.insertCode(u,I?m:m+1,r,s);let N="";y?N=`
${p}.${this.UPDATE_LISTENER_FUNC_NAME} = (Comp) =>{
  const newElem=Comp(${this.PARAM_ALTER_NAME});
  ${p}.before(newElem);
  ${p}.remove();
  return newElem
}
`:N=`
${p}.${this.UPDATE_LISTENER_FUNC_NAME} = (Comp) =>{
  const newElem=Comp();
  ${p}.before(newElem);
  ${p}.remove();
  return newElem
}
`;let M=!1;for(let i in $){M||(M=!0);let l=$[i];N+=`import.meta.hot.accept('${i}',({${l.varMapCode}})=>{${l.listenCode}});`}return M&&(N=`
if(import.meta.hot){
  ${N}
}else{
  console.warn('import.meta.hot not exist')
}
`),r=this.insertCode(N,G,r,s),r}resolveFilePath(t,e){let r=x.default.resolve(e,"../",t);try{let n=P.default.statSync(r);if(n.isDirectory()){let s=P.default.readdirSync(r);for(let a=s.length;a--;){let o=s[a];if(/index\.[jt]sx$/.test(o))return t+"/"+o}}else return n.isFile()?t:!1}catch{let s=P.default.readdirSync(x.default.resolve(r,"../")),a=x.default.basename(t),o=x.default.dirname(t);for(let m=s.length;m--;){let h=s[m];if(s.indexOf(a)===0&&/\.[jt]sx$/.test(h))return o+"/"+h}}return!1}getImports(t,e){let r={varNames:[],info:{}};return t.forEach(n=>{if(n.type!=="ImportDeclaration"||n.source.value.indexOf(".")!==0)return 0;let s=this.resolveFilePath(n.source.value,e);if(!s)return 0;let a={src:s,imports:{}};r.info[n.source.value]=a,n.specifiers.forEach(o=>{let m=o.local.name;o.type==="ImportDefaultSpecifier"?a.imports[m]="default":o.type==="ImportSpecifier"&&(a.imports[m]=o.imported.name),r.varNames.push({name:m,info:a})})}),r}getExports(t){return t.filter(e=>e.type==="ExportDefaultDeclaration"||e.type==="ExportNamedDeclaration")}getExportedFunctions(t){let e=[],r=n=>{n.type==="FunctionDeclaration"||n.type==="ArrowFunctionExpression"?e.push(n):n.type==="VariableDeclaration"&&n.declarations.forEach(s=>r(s.init))};return t.forEach(n=>{if(n.type==="ExportDefaultDeclaration"||n.type==="ExportNamedDeclaration"){let{declaration:s}=n;s&&r(s)}}),e}getDependentJSXComponents(t,e){let r=[];for(let n of t.matchAll(/Blue\.r\(([A-Z][A-z_]*)/g)){let s=n[1],a=this.Parser.parseExpressionAt(t,n.index,{ecmaVersion:"latest",sourceType:"module"});a.type==="SequenceExpression"&&(a=a.expressions.find(o=>o.start===a.start)),e.varNames.forEach(o=>{if(o.name===s){let m={name:s,info:o.info,node:a,index:n.index};r.push(m)}})}return r}getVars(t,e){return[]}fromDirectReturnToVarReturn(t){return""}getReturnValue(t){return""}};var q=new v;function z({enabled:c}={enabled:!0}){return{name:"vite-plugin-blue-hmr",apply(t,{command:e}){return c&&e==="serve"},transform(t,e){if(!e.includes("node_modules")&&/\.[jt]sx$/.test(e))return q.transform(t,e)}}}0&&(module.exports={hmrAdder});
