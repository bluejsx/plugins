var Y=Object.create;var S=Object.defineProperty;var j=Object.getOwnPropertyDescriptor;var ee=Object.getOwnPropertyNames;var te=Object.getPrototypeOf,re=Object.prototype.hasOwnProperty;var C=c=>S(c,"__esModule",{value:!0});var se=(c,t)=>{C(c);for(var e in t)S(c,e,{get:t[e],enumerable:!0})},ne=(c,t,e)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of ee(t))!re.call(c,r)&&r!=="default"&&S(c,r,{get:()=>t[r],enumerable:!(e=j(t,r))||e.enumerable});return c},L=c=>ne(C(S(c!=null?Y(te(c)):{},"default",c&&c.__esModule&&"default"in c?{get:()=>c.default,enumerable:!0}:{value:c,enumerable:!0})),c);se(exports,{default:()=>z,hmrAdder:()=>q});var V=typeof document=="undefined"?new(require("url")).URL("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("main.js",document.baseURI).href;var k=L(require("acorn"));var F=class{constructor(){this.UPDATE_LISTENER_FUNC_NAME="_bjsx_hmr_update";this.PARAM_ALTER_NAME="_blue_insert_params"}transform(t){}getImports(...t){return[]}getExports(...t){return[]}getDependentJSXComponents(t,e){return[]}getFunctions(t){return[]}getVars(t,e){return[]}fromDirectReturnToVarReturn(t){return""}getReturnValue(t){return""}getInsertRecord(){return[]}replaceCode(t,e,r,n,s=!1){let o=0;return n.filter(a=>a[0]<e[0]||s&&a[0]===e[0]).forEach(a=>o+=a[1]),n.push([e[0],t.length-e[1]+e[0]]),r.substring(0,e[0]+o)+t+r.substring(e[1]+o)}insertCode(t,e,r,n,s=!1){return this.replaceCode(t,[e,e],r,n,s)}getCodeFragment(t,e,r){let n=t[0],s=t[1];for(let o=r.length;o--;){let[a,m]=r[o];a<t[1]&&(s+=m,a<t[0]&&(n+=m))}return e.substring(n,s)}};var b=L(require("path")),P=L(require("fs")),v=class extends F{constructor(){super();this.Parser=k.Parser}transform(t,e){t=t.replace(/=>/g,"=> ");let r=this.Parser.parse(t,{ecmaVersion:"latest",sourceType:"module"}),n=t,s=this.getImports(r.body,e),o=this.getExportedFunctions(r.body),a=this.getInsertRecord();return o.forEach(m=>{let{start:y,end:E}=m,N=this.getCodeFragment([y,E],t,a),f=this.getDependentJSXComponents(N,s);t=this.replaceCode(this.processFunctionCode(f,m,N,n),[y,E],t,a)}),t}addHotListenerInfo(t,e,r,n){var o,a;(a=t[o=e.info.src])!=null||(t[o]={varMapCode:"",listenCode:""});let s=t[e.info.src];s.varMapCode+=`${e.info.imports[e.name]}:${e.name},`,s.listenCode+=`
if(${r}.${e.refName}.${this.UPDATE_LISTENER_FUNC_NAME}){
  ${r}.${e.refName}=${r}.${e.refName}.${this.UPDATE_LISTENER_FUNC_NAME}(${e.name}, ${e.attrObjCode?e.attrObjCode:"null"});
  ${n}
}else{
  import.meta.hot.decline()
}
`}processFunctionCode(t,e,r,n){var U,B,H,J,O,X;let s=this.getInsertRecord(),o=r,a=e.body,m=a.start-e.start,y=a.end-e.start,E=a.body,N=e.params[0],f="";if(N){let i=N.start-e.start,l=N.end-e.start,u=r.substring(i,l);r=this.replaceCode(this.PARAM_ALTER_NAME,[i,l],r,s),f=`
let ${u}=${this.PARAM_ALTER_NAME};`}let g="self",x=[],$={},p,w=0,d=E==null?void 0:E.find(i=>i.type==="ReturnStatement"),I=a.type==="CallExpression"&&((B=(U=a.callee)==null?void 0:U.object)==null?void 0:B.name)==="Blue";if(d)d.argument.type==="Identifier"&&(g=d.argument.name);else if(!I)return o;let Z=d&&d.argument.type==="CallExpression"&&((J=(H=d.argument.callee)==null?void 0:H.object)==null?void 0:J.name)==="Blue",G=I?y:d.start-e.start;for(let i of r.matchAll(/Blue\.r\(/g)){let l=this.Parser.parseExpressionAt(r,i.index,{ecmaVersion:"latest",sourceType:"module"});if(l.type==="SequenceExpression"&&(l=l.expressions.find(u=>u.start===l.start)),(l==null?void 0:l.type)==="CallExpression"&&((O=l==null?void 0:l.arguments[1])==null?void 0:O.type)==="ObjectExpression"){let u=(X=l.arguments[1].properties.find(A=>{var D;return((D=A.key)==null?void 0:D.name)==="ref"}))==null?void 0:X.value.elements[0].name;if(u){p=u;break}}}t.forEach(i=>{let l=i.node.arguments[1];if(l.type==="ObjectExpression"){i.attrObjCode=o.substring(l.start,l.end);let u=l.properties.find(A=>A.key.name==="ref");if(u){let A="",D=u.value.elements;if(i.refName=D[1].value,i.hasRef=!0,!I){E.forEach(({type:_,start:R,end:K})=>{let T=R-e.start,Q=K-e.start,W=o.substring(T,Q);_==="ExpressionStatement"&&o.indexOf(i.refName,T)===T&&(A+=`${p}.${W};`)});for(let _ of o.matchAll(new RegExp(i.refName,"g")))try{let R=this.Parser.parseExpressionAt(o,_.index,{ecmaVersion:"latest",sourceType:"module"});(R.type==="AssignmentExpression"||R.type==="CallExpression")&&(r=this.insertCode(`${p}.`,_.index,r,s))}catch{}}this.addHotListenerInfo($,i,p,A)}else i.refName=`bjsxc_${w++}`,i.hasRef=!1,x.push(()=>{r=this.insertCode(`ref:[${p},'${i.refName}'],`,l.start+1,r,s),this.addHotListenerInfo($,i,p,"")})}else i.refName=`bjsxc_${w++}`,x.push(()=>{r=this.replaceCode(`{ref:[${p},'${i.refName}']}`,[l.start,l.start+4],r,s),this.addHotListenerInfo($,i,p,"")})}),p||(p="refs",f+=`const ${p}={};`);for(let i=x.length;i--;)x[i]();if(I)f=`{${f}const ${g}=`,r=this.insertCode(`
return ${g};}`,a.end,r,s,!0);else if(Z){let i=this.getCodeFragment([d.start-e.start+6,d.end-e.start],r,s);f=`${f}
      const ${g}=${i};`,r=this.replaceCode(`
return ${g};`,[d.start-e.start,d.start-e.start+i.length+7],r,s)}r=this.insertCode(f,I?m:m+1,r,s);let h="";N?h=`const newElem=Blue.r(Comp, attr, ${this.PARAM_ALTER_NAME}.children)`:h="const newElem=Blue.r(Comp, attr)",h=`
${g}.${this.UPDATE_LISTENER_FUNC_NAME} = (Comp, attr) =>{
    ${h}
    ${g}.before(newElem);
    ${g}.remove();
    return newElem
  }
`;let M=!1;for(let i in $){M||(M=!0);let l=$[i];h+=`import.meta.hot.accept('${i}',({${l.varMapCode}})=>{${l.listenCode}});`}return M&&(h=`
if(import.meta.hot){
  ${h}
}else{
  console.warn('import.meta.hot does not exist')
}
`),r=this.insertCode(h,G,r,s),r}resolveFilePath(t,e){let r=b.default.resolve(e,"../",t);try{let n=P.default.statSync(r);if(n.isDirectory()){let s=P.default.readdirSync(r);for(let o=s.length;o--;){let a=s[o];if(/index\.[jt]sx$/.test(a))return t+"/"+a}}else return n.isFile()?t:!1}catch{let s=P.default.readdirSync(b.default.resolve(r,"../")),o=b.default.basename(t),a=b.default.dirname(t);for(let m=s.length;m--;){let y=s[m];if(s.indexOf(o)===0&&/\.[jt]sx$/.test(y))return a+"/"+y}}return!1}getImports(t,e){let r={varNames:[],info:{}};return t.forEach(n=>{if(n.type!=="ImportDeclaration"||n.source.value.indexOf(".")!==0)return 0;let s=this.resolveFilePath(n.source.value,e);if(!s)return 0;let o={src:s,imports:{}};r.info[n.source.value]=o,n.specifiers.forEach(a=>{let m=a.local.name;a.type==="ImportDefaultSpecifier"?o.imports[m]="default":a.type==="ImportSpecifier"&&(o.imports[m]=a.imported.name),r.varNames.push({name:m,info:o})})}),r}getExports(t){return t.filter(e=>e.type==="ExportDefaultDeclaration"||e.type==="ExportNamedDeclaration")}getExportedFunctions(t){let e=[],r=n=>{n.type==="FunctionDeclaration"||n.type==="ArrowFunctionExpression"?e.push(n):n.type==="VariableDeclaration"&&n.declarations.forEach(s=>r(s.init))};return t.forEach(n=>{if(n.type==="ExportDefaultDeclaration"||n.type==="ExportNamedDeclaration"){let{declaration:s}=n;s&&r(s)}}),e}getDependentJSXComponents(t,e){let r=[];for(let n of t.matchAll(/Blue\.r\(([A-Z][A-z_]*)/g)){let s=n[1],o=this.Parser.parseExpressionAt(t,n.index,{ecmaVersion:"latest",sourceType:"module"});o.type==="SequenceExpression"&&(o=o.expressions.find(a=>a.start===o.start)),e.varNames.forEach(a=>{if(a.name===s){let m={name:s,info:a.info,node:o,index:n.index};r.push(m)}})}return r}getVars(t,e){return[]}fromDirectReturnToVarReturn(t){return""}getReturnValue(t){return""}};var q=new v;function z({enabled:c}={enabled:!0}){return{name:"vite-plugin-blue-hmr",apply(t,{command:e}){return c&&e==="serve"},transform(t,e){if(!e.includes("node_modules")&&/\.[jt]sx$/.test(e))return q.transform(t,e)}}}0&&(module.exports={hmrAdder});
